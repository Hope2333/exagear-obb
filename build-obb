#!/bin/bash

set -xe

channel=bionic

basedir=$PWD/build
downloads=$basedir/packaging
tools=$basedir/tools
sourcedir=$(cd $(dirname $0) && pwd)
release=$1
pkgdir=$PWD/pkg
pkgver=$release
rootdir=$PWD

#
download ()
{
    test -d $downloads || mkdir -p $downloads
    test -f $downloads/$(basename $2) || wget -O $downloads/$(basename $2) ${3:-$2}
    #rm -rf $1
    case $2 in
        *.deb)
            test -e /usr/bin/dpkg && packdeb=dpkg || true
            test -e /usr/bin/bsdtar && packdeb=bsdtar || true
            test -e /data/data/com.termux/files/usr/bin/dpkg && packdeb=dpkg tmux=true || true
            case $packdeb in
                dpkg)
                    dpkg --extract $downloads/$(basename $2) $pkgdir ;;
                bsdtar)
                    bsdtar -xf $downloads/$(basename $2)
                    cd $pkgdir
                    bsdtar -xf $basedir/$1/data.tar.xz
                    cd $basedir/$1/ ;;
                *) printf "Error4!" ;;
            esac
            ;;
        *.zip)
            unzip -q $downloads/$(basename $2) || true ;;
        *)
            tar xf $downloads/$(basename $2) ;;
    esac
}

pass ()
{
    set +x
    echo " "
    read -s -p "Enter your Password:" pass
    echo " "
    echo "Starting..."
    echo " "
    set -xe
}

clean ()
{
    mkdir -p $downloads
    mv $downloads $rootdir/downloads
    test -z "$release" || rm -rf $basedir
    test -z "$release" || rm -rf $pkgdir
    test -d $basedir || mkdir $basedir
    test -d $pkgdir || mkdir $pkgdir
    cd $basedir
    mv $rootdir/downloads $downloads
}

clean-all ()
{
    rm -rf $basedir
    rm -rf $pkgdir
}

config_mainzip ()
{
    mkdir -p base
    cd base
    download base base-all.zip https://github.com/Hope2333/exagear-obb/releases/download/0.0.1026/base-all.zip
    #download base base-all.zip https://hub.fastgit.org/Hope2333/exagear-obb/releases/download/0.0.1026/base-all.zip
    #download base base-minimal1.zip URL
    mv ./* $pkgdir
    cd ..
}

config_wine-devel-i386 ()
{
    mkdir -p wine-devel-i386
    cd wine-devel-i386
    download wine-devel-i386 wine-devel-i386-$pkgver.deb https://dl.winehq.org/wine-builds/ubuntu/dists/${channel}/main/binary-i386/wine-devel-i386_${pkgver}~${channel}-1_i386.deb
    cd ..
}

config_wine-devel ()
{
    mkdir -p wine-devel
    cd wine-devel
    download wine-devel wine-devel-$pkgver.deb https://dl.winehq.org/wine-builds/ubuntu/dists/${channel}/main/binary-i386/wine-devel_${pkgver}~${channel}-1_i386.deb
    cd ..
}

config_winehq-devel ()
{
    mkdir -p winehq-devel
    cd winehq-devel
    download winehq-devel winehq-devel-$pkgver.deb https://dl.winehq.org/wine-builds/ubuntu/dists/${channel}/main/binary-i386/winehq-devel_${pkgver}~${channel}-1_i386.deb
    cd ..
}

install-all ()
{
    cd $pkgdir
    #echo -e "'$pass\n"|sudo zip --symlink -rq9 ../wine-dev-$release.zip .
    sudo zip --symlink -rq9 ../wine-dev-$release.zip .
    clean
    cd ..
    #echo -e "$pass\n"|sudo rm -rf $pkgdir
    rm -rf $pkgdir
}

#Main

#pass
clean
config_mainzip
test -d wine-devel-i386 || config_wine-devel-i386
test -d wine-devel || config_wine-devel
test -d winehq-devel || config_winehq-devel
install-all
