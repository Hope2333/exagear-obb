#!/bin/bash
#Options to be added in the future:Stable and Staging versions are supported.
#

channel=bionic

main() {
  set_env
  if   [ "$#" == "0" ]
   then
    printf "%s\n" "${RED}Error${BLUE}: ${RESET}No additional options!"
    main0
  else
    main0 $@
   fi
}

main0() {
    case $1 in
    c | -c | -clean | clean | --clean)
        base.clean
    ;;
    baseurl | --baseurl)
        
    ;;
    O | -O | Output | --Output)
        
    ;;
    *.*)
        ./build-obb $@
    ;;
    --version)
        
    ;;
    -h* | --h* | *)
         help
    ;;
    esac
}

base.clean() {
 0
}

help() {
  case $LANG in
    zh_CN*) help-zh_CN;;
    en_US*) help-en_US;;
    *)      help-en_US;;
  esac
}


help-en_US() {
    printf "%s\n" "${RESET}ExaGear ED cache crector file builder ${BLUE}[exagear-obb]v1.0"
    printf "%s\n" "${RESET}  Usage: $0 ${YELLOW}[${BOLD}options${RESET}${YELLOW}]"
    printf "%s\n"
    printf "%s\n" "${RESET}Optional options${GREEN}:"
    printf "%s\n" "    ${PURPLE}--baseurl${GREEN} ${YELLOW}\"URL\"    ${RESET}Change rootfs download form default url to your ${GREEN}<${YELLOW}URL${GREEN}>${RESET}."
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}c${GREEN})${PURPLE}lean          ${RESET}Clean all files with download ${GREEN}[${CYAN}Alone${GREEN}]${RESET}."
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}h${GREEN})${PURPLE}elp           ${RESET}Display help documentation ${GREEN}[${CYAN}Alone${GREEN}]${RESET}."
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}O${GREEN})${PURPLE}utput ${GREEN}<${BLUE}dir${GREEN}>   ${RESET}Select the directory of the product export."
    printf "%s\n" "    ${PURPLE}--version          ${RESET}Display this software version ${GREEN}[${CYAN}Alone${GREEN}]${RESET}."
    printf "%s\n"
    printf "%s\n" "${RESET}Necessary options for making packages${GREEN}:"
    printf "%s\n" "    ${GREEN}<${RESET}Numbers${GREEN}>          ${RESET}Specifies the version of WineHQ for making the target."
    printf "%s\n"
}

help-zh_CN() {
    printf "%s\n" "${RESET}ExaGear ED 数据包制作工具 ${BLUE}[exagear-obb]v1.0"
    printf "%s\n" "${RESET}   用法: $0 ${YELLOW}[${BOLD}选项${RESET}${YELLOW}]"
    printf "%s\n"
    printf "%s\n" "${RESET}可选的${GREEN}:"
    printf "%s\n" "    ${PURPLE}--baseurl${GREEN} ${YELLOW}\"网址\"    ${RESET}更改基础包的来源地址 ${GREEN}<${YELLOW}网址${GREEN}>${RESET}。"
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}c${GREEN})${PURPLE}lean           ${RESET}清除下载缓存 ${GREEN}[${CYAN}独立${GREEN}]${RESET}。"
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}h${GREEN})${PURPLE}elp            ${RESET}显示帮助（救命根本不会写QwQ）${GREEN}[${CYAN}独立${GREEN}]${RESET}。"
    printf "%s\n" "    ${PURPLE}-${RESET}-${GREEN}(${RESET}O${GREEN})${PURPLE}utput ${GREEN}<${BLUE}目录${GREEN}>   ${RESET}打包到一个目录（保存到）。"
    printf "%s\n" "    ${PURPLE}--version           ${RESET}显示工具版本号 ${GREEN}[${CYAN}独立${GREEN}]${RESET}。"
    printf "%s\n"
    printf "%s\n" "${RESET}用于制作数据包必须的${GREEN}:"
    printf "%s\n" "    ${GREEN}<${RESET}数值x.x${GREEN}>          ${RESET}选择要生成的WineHQ的版本（目前仅支持开发版）。"
    printf "%s\n"
}

set_env() {
    #Base
        basedir=$PWD/build
        downloads=$basedir/packaging
        tools=$basedir/tools
        sourcedir=$(cd $(dirname $0) && pwd)
        release=$1
        pkgdir=$PWD/pkg
        pkgver=$release
        rootdir=$PWD
        TEMP_FILE=".build.sh"
    #Colors
        RED=$(printf '\033[31m')
        GREEN=$(printf '\033[32m')
        YELLOW=$(printf '\033[33m')
        BLUE=$(printf '\033[34m')
        PURPLE=$(printf '\033[35m')
        CYAN=$(printf '\033[36m')
        RESET=$(printf '\033[m')
        BOLD=$(printf '\033[1m')
    #Launguage

       if  [ $LANG==zh_CN* -o $LANG==en_US* ]
         then
        conf_printf-$LANG
         else
        conf_printf-en_US.UTF-8
       fi
       conf_printf-$LANG
    
        
}
#Main
main $@
